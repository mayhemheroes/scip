.cmake:
  stage: build
  image:
    name: ${IMAGE}
  needs:
    - "prepare image"
  tags:
    - compile
  variables:
    CFLAGS: "-Werror -s"
    CXXFLAGS: "-Werror -s"
  script:
    - mkdir -p $CI_PROJECT_DIR/builds/scip
    - cd $CI_PROJECT_DIR/builds/scip
    - export CFLAGS=$CFLAGS
    - export CXXFLAGS=$CXXFLAGS
    - cmake $CI_PROJECT_DIR ${CMAKE_FLAGS} -LA -DZIMPL=off -DREADLINE=off -DBoost_USE_STATIC_LIBS=on -DSTATIC_GMP=on -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
    - make -j
    - ./bin/scip -f $CI_PROJECT_DIR/check/instances/MINLP/ex1224.nl
    - make all_executables -j
    - for gen in ${CPACK_GENERATORS}; do cpack -G $gen; done
    - mv SCIP-*-Linux.* $CI_PROJECT_DIR/
  artifacts:
    paths:
      - $CI_PROJECT_DIR/SCIP-*-Linux.*

"cmake release gcc":
  extends: .cmake
  variables:
    CMAKE_FLAGS: "-DCMAKE_BUILD_TYPE=Release"
    CPACK_GENERATORS: "STGZ DEB"

"cmake debug gcc":
  extends: .cmake
  variables:
    CMAKE_FLAGS: "-DCMAKE_BUILD_TYPE=Debug"
    CPACK_GENERATORS: "STGZ"

"cmake release with debug info":
  extends: .cmake
  variables:
    # turn off block/buffer memory for better memory leak checks with valgrind in valgrind-job
    CMAKE_FLAGS: "-DCMAKE_BUILD_TYPE=RelWithDebInfo -DNOBLKBUFMEM=on"
    CPACK_GENERATORS: "STGZ"

"ctest":
  stage: build
  image:
    name: ${IMAGE}
  needs:
    - "prepare image"
  tags:
    - compile
  script:
    - mkdir -p $CI_PROJECT_DIR/builds/scip
    - cd $CI_PROJECT_DIR/builds/scip
    - export CFLAGS=$CFLAGS
    - export CXXFLAGS=$CXXFLAGS
    - cmake $CI_PROJECT_DIR ${CMAKE_FLAGS} -LA -DZIMPL=off -DREADLINE=off -DBoost_USE_STATIC_LIBS=on -DSTATIC_GMP=on -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
    - make -j
    - ./bin/scip -f $CI_PROJECT_DIR/check/instances/MINLP/ex1224.nl
    - ctest --output-on-failure -j  -T test --no-compress-output
