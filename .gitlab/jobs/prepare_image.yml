"prepare image":
  stage: image
  tags:
    - compile
  image:
    # Use a container image that can container docker images without a docker daemon
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # Error out of $DOCKERFILE_HASH is not set
    - if [ -z "$DOCKERFILE_HASH" ]; then
        echo "DOCKERFILE_HASH is not set. Check that it is set in .gitlab/docker/dockerfile_hash.yml and that the file is included in .gitlab-ci.yml";
        exit 1;
      fi
    # Calculate the MD5 hash of the file
    - computed_hash=$(md5sum ${IMAGE_PATH} | awk '{print $1}')
    # Compare the computed hash with the expected hash
    - if [ $computed_hash != $DOCKERFILE_HASH ]; then
        echo Hashes do not match! DOCKERFILE_HASH defined in .gitlab-ci.yml has to match the md5sum of .gitlab/docker/Dockerfile.;
        exit 1;
      fi
    # Set gitlab registry credentials
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$CI_DEPENDENCY_PROXY_SERVER\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    # Build and push the image
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${IMAGE_PATH}"
      --destination "${IMAGE}"
      --cache=true
      --cache-repo="${CI_REGISTRY}/integer/scip/ci_cache"
      --cache-ttl=168h
